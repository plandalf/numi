{
    "openapi": "3.1.0",
    "info": {
        "title": "Plandalf",
        "version": "0.0.1",
        "description": "Plandalf API"
    },
    "servers": [
        {
            "url": "http://localhost/api"
        }
    ],
    "tags": [
        {
            "name": "Checkout Sessions"
        },
        {
            "name": "Customers"
        }
    ],
    "security": [
        {
            "http": []
        }
    ],
    "paths": {
        "/checkout_sessions": {
            "get": {
                "operationId": "checkout_sessions.index",
                "summary": "List all checkout sessions",
                "tags": [
                    "Checkout Sessions"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `CheckoutSessionApiResponse`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CheckoutSession"
                                            }
                                        },
                                        "path": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "description": "Base path for paginator generated URLs."
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "description": "Number of items shown per page."
                                        },
                                        "next_cursor": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "description": "The \"cursor\" that points to the next set of items."
                                        },
                                        "next_page_url": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "format": "uri"
                                        },
                                        "prev_cursor": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "description": "The \"cursor\" that points to the previous set of items."
                                        },
                                        "prev_page_url": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "format": "uri"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "path",
                                        "per_page",
                                        "next_cursor",
                                        "next_page_url",
                                        "prev_cursor",
                                        "prev_page_url"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "checkout_sessions.store",
                "summary": "Create a checkout session",
                "tags": [
                    "Checkout Sessions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "coordinates": {
                                        "type": "object",
                                        "description": "The location coordinates.",
                                        "properties": {
                                            "lat": {
                                                "type": "number"
                                            },
                                            "long": {
                                                "type": "number"
                                            }
                                        },
                                        "required": [
                                            "lat",
                                            "long"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CheckoutSession`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckoutSession"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/checkout_sessions/{checkout_session}": {
            "get": {
                "operationId": "checkout_sessions.show",
                "summary": "Retrieve a checkout session",
                "tags": [
                    "Checkout Sessions"
                ],
                "parameters": [
                    {
                        "name": "checkout_session",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CheckoutSession`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckoutSession"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customers/{customer}": {
            "get": {
                "operationId": "customers.show",
                "summary": "List all customers",
                "tags": [
                    "Customers"
                ],
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "required": true,
                        "description": "The customer ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This method should return customer details.\nFor now, we will return a placeholder response.\n\n\n\n`CustomerApiResponse`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerApiResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/fulfillment": {
            "get": {
                "operationId": "v1.fulfillment.index",
                "summary": "Get fulfillment overview for organization",
                "tags": [
                    "Fulfillment"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/fulfillment/statistics": {
            "get": {
                "operationId": "v1.fulfillment.statistics",
                "summary": "Get fulfillment statistics for organization",
                "tags": [
                    "Fulfillment"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/fulfillment/orders/{order}": {
            "get": {
                "operationId": "v1.fulfillment.orders.show",
                "summary": "Get fulfillment details for a specific order",
                "tags": [
                    "Fulfillment"
                ],
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "description": "The order UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/fulfillment/orders/{order}/resend-notification": {
            "post": {
                "operationId": "v1.fulfillment.orders.resend-notification",
                "summary": "Resend order notification email",
                "tags": [
                    "Fulfillment"
                ],
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "description": "The order UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/fulfillment/order-items/{orderItem}/update": {
            "post": {
                "operationId": "v1.fulfillment.order-items.update",
                "summary": "Update order item fulfillment status and details",
                "tags": [
                    "Fulfillment"
                ],
                "parameters": [
                    {
                        "name": "orderItem",
                        "in": "path",
                        "required": true,
                        "description": "The order item ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "fulfillment_status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "partially_fulfilled",
                                            "fulfilled",
                                            "unprovisionable"
                                        ]
                                    },
                                    "quantity_fulfilled": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 0
                                    },
                                    "notes": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 1000
                                    },
                                    "metadata": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "tracking_number": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "tracking_url": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uri",
                                        "maxLength": 500
                                    },
                                    "unprovisionable_reason": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 1000
                                    },
                                    "delivery_assets": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "maxLength": 255
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "maxLength": 500
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "url"
                                            ]
                                        }
                                    }
                                },
                                "required": [
                                    "fulfillment_status",
                                    "quantity_fulfilled"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/fulfillment/order-items/{orderItem}/provision": {
            "post": {
                "operationId": "v1.fulfillment.order-items.provision",
                "summary": "Update order item fulfillment status and details",
                "tags": [
                    "Fulfillment"
                ],
                "parameters": [
                    {
                        "name": "orderItem",
                        "in": "path",
                        "required": true,
                        "description": "The order item ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "fulfillment_status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "partially_fulfilled",
                                            "fulfilled",
                                            "unprovisionable"
                                        ]
                                    },
                                    "quantity_fulfilled": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 0
                                    },
                                    "notes": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 1000
                                    },
                                    "metadata": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "tracking_number": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "tracking_url": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uri",
                                        "maxLength": 500
                                    },
                                    "unprovisionable_reason": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 1000
                                    },
                                    "delivery_assets": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "maxLength": 255
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "maxLength": 500
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "url"
                                            ]
                                        }
                                    }
                                },
                                "required": [
                                    "fulfillment_status",
                                    "quantity_fulfilled"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/fulfillment/order-items/{orderItem}/mark-unprovisionable": {
            "post": {
                "operationId": "v1.fulfillment.order-items.mark-unprovisionable",
                "summary": "Mark an order item as unprovisionable",
                "tags": [
                    "Fulfillment"
                ],
                "parameters": [
                    {
                        "name": "orderItem",
                        "in": "path",
                        "required": true,
                        "description": "The order item ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "unprovisionable_reason": {
                                        "type": "string",
                                        "maxLength": 1000
                                    },
                                    "notes": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 1000
                                    }
                                },
                                "required": [
                                    "unprovisionable_reason"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/v1/fulfillment/order-items/{orderItem}/tracking": {
            "patch": {
                "operationId": "v1.fulfillment.order-items.update-tracking",
                "summary": "Update tracking information for an order item",
                "tags": [
                    "Fulfillment"
                ],
                "parameters": [
                    {
                        "name": "orderItem",
                        "in": "path",
                        "required": true,
                        "description": "The order item ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tracking_number": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "tracking_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "maxLength": 500
                                    },
                                    "expected_delivery_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "delivered_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "maxLength": 1000
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "http": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "CheckoutLineItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "quantity"
                ],
                "title": "CheckoutLineItem"
            },
            "CheckoutSession": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the checkout session",
                        "examples": [
                            "123e4567-e89b-12d3-a456-426614174000"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the checkout session",
                        "examples": [
                            "started"
                        ]
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerApiResponse"
                    },
                    "expires_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "examples": [
                            "2025-12-31T23:59:59Z"
                        ]
                    },
                    "finalized_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "examples": [
                            "2025-12-31T23:59:59Z"
                        ]
                    },
                    "metadata": {
                        "type": "object",
                        "description": "Metadata associated with the checkout session",
                        "examples": [
                            {
                                "key": "value"
                            }
                        ],
                        "additionalProperties": {}
                    },
                    "discounts": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "description": "Discount Codes applied to the session",
                        "items": {}
                    },
                    "properties": {
                        "type": "object",
                        "description": "Metadata associated with the checkout session",
                        "examples": [
                            {
                                "fieldId": "field-value"
                            }
                        ],
                        "additionalProperties": {}
                    },
                    "line_items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CheckoutLineItem"
                        }
                    },
                    "total": {
                        "type": "integer",
                        "description": "Total Order Amount",
                        "examples": [
                            1200
                        ]
                    },
                    "taxes": {
                        "type": "integer",
                        "description": "Total amount of taxes applied to the order",
                        "examples": [
                            200
                        ]
                    },
                    "inclusive_taxes": {
                        "type": "integer",
                        "description": "Total amount of incluive taxes applied to the order",
                        "examples": [
                            200
                        ]
                    },
                    "subtotal": {
                        "type": "integer",
                        "description": "Subtotal",
                        "examples": [
                            1000
                        ]
                    },
                    "currency": {
                        "type": "string",
                        "description": "Currency of the order",
                        "examples": [
                            "USD"
                        ]
                    }
                },
                "required": [
                    "id",
                    "status",
                    "expires_at",
                    "finalized_at",
                    "metadata",
                    "discounts",
                    "properties",
                    "line_items",
                    "total",
                    "taxes",
                    "inclusive_taxes",
                    "subtotal",
                    "currency"
                ],
                "title": "CheckoutSession"
            },
            "CustomerApiResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "CustomerApiResponse"
            },
            "Status": {
                "type": "string",
                "description": "| |\n|---|\n| `started` <br/> The session has been created and is ready for use. |\n| `closed` <br/> The session has been completed successfully. |\n| `failed` <br/> The session has been canceled by the user or system. |",
                "enum": [
                    "started",
                    "closed",
                    "failed"
                ],
                "title": "Status"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "ModelNotFoundException": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "AuthorizationException": {
                "description": "Authorization error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}